name: Django and React CI/CD

on:
  push:
    branches: [ "testing-branch" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
           python-version: '3.10'

      - name: Install backend dependencies
        run: |
          cd WarehousePilot_app/backend
          pip install -r requirements.txt
      
    #  - name: Run flake8
    #    run: |
    #      cd WarehousePilot_app/backend
    #      pip install flake8
    #      flake8 .
 
      - name: Wait for PostgreSQL to be ready
        run: sleep 10
 
      - name: Run backend tests
        env:
          DATABASE_URL: "postgres://${{ secrets.DATABASE_USER }}:${{ secrets.DATABASE_PASSWORD }}@localhost:5432/${{ secrets.DATABASE_NAME }}"
        run: |
          cd WarehousePilot_app/backend
          python manage.py migrate
          python manage.py test --keepdb
 
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
 
      - name: Install frontend dependencies
        run: |
          cd WarehousePilot_app/frontend
          npm install

      - name: Build frontend
        run: |
          cd WarehousePilot_app/frontend
          npm run build
 
    #  - name: Run frontend tests
    #    run: |
    #      cd WarehousePilot_app/frontend
    #      npm test -- --coverage
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-
 